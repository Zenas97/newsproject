package diego.newsproject;

import java.net.http.HttpHeaders;
import java.time.LocalDate;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import entities.Articoli;

@RestController
@RequestMapping("articoli")
public class restController 
{
	@Autowired
	ArticoliRepository articoliRepo;
	
	@ResponseBody
	@PostMapping
	public ResponseEntity<ResponseObject> inserisciArticolo(
			@RequestParam(name = "titolo",required = false) String titolo,
			@RequestParam(name ="autore",required = false) String autore,
			@RequestParam(name ="testo",required = false) String testo,
			@RequestParam(name ="data",required = false)  String data)
	{
		ResponseObject response = new ResponseObject();
		if(titolo == null) response.getErrori().put("titolo", "inserisci titolo ");
		if(autore == null)response.getErrori().put("autore", "inserisci autore ");
		if(testo == null) response.getErrori().put("testo", "inserisci testo ");
		if(data == null) response.getErrori().put("data", "inserisci data ");
		
		if(!response.getErrori().isEmpty()) {
			response.setMessaggio("Errore parametri");
			return  ResponseEntity.badRequest().body(response);
		}
		
		Articoli articolo = new Articoli();
		articolo.setAutore(autore);
		articolo.setData(LocalDate.parse(data));
		articolo.setTesto(testo);
		articolo.setTitolo(titolo);
		articolo.setAutore(autore);
		articolo.setStato(false);
		articolo.setPredizione(0);
		
		if(articoliRepo.save(articolo) == null) {
			response.setMessaggio("Errore salvataggio su database");
			return ResponseEntity.status(404).body(response);
		}
		
		response.setMessaggio("Articolo creato");
		return ResponseEntity.ok(response);
	}

}
